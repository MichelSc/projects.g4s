/**
 */
package com.misc.projects.g4s.G4SOptiPost.provider;

import com.misc.common.moplaf.timeview.impl.IItemIntervalEventProvider;
import com.misc.common.moplaf.timeview.impl.IItemIntervalEventsProvider;
import com.misc.projects.g4s.G4SOptiPost.util.G4SOptiPostAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.Disposable;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemColorProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class G4SOptiPostItemProviderAdapterFactory extends G4SOptiPostAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the item providers created, so that they can be {@link #dispose disposed}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Disposable disposable = new Disposable();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 */
	public G4SOptiPostItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
		supportedTypes.add(IItemIntervalEventProvider.class); // non emf interface
		supportedTypes.add(IItemIntervalEventsProvider.class); // non emf interface
		supportedTypes.add(IItemColorProvider.class); // non emf interface
	}

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.Domain}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDomainAdapter() {
		return new DomainItemProvider(this);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.Shift} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShiftItemProvider shiftItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.Shift}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShiftAdapter() {
		if (shiftItemProvider == null) {
			shiftItemProvider = new ShiftItemProvider(this);
		}

		return shiftItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.Employee} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmployeeItemProvider employeeItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.Employee}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmployeeAdapter() {
		if (employeeItemProvider == null) {
			employeeItemProvider = new EmployeeItemProvider(this);
		}

		return employeeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.Location} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationItemProvider locationItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.Location}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationAdapter() {
		if (locationItemProvider == null) {
			locationItemProvider = new LocationItemProvider(this);
		}

		return locationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.Scenario} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScenarioItemProvider scenarioItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.Scenario}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScenarioAdapter() {
		if (scenarioItemProvider == null) {
			scenarioItemProvider = new ScenarioItemProvider(this);
		}

		return scenarioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.LpOptiPostFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LpOptiPostFlowItemProvider lpOptiPostFlowItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.LpOptiPostFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLpOptiPostFlowAdapter() {
		if (lpOptiPostFlowItemProvider == null) {
			lpOptiPostFlowItemProvider = new LpOptiPostFlowItemProvider(this);
		}

		return lpOptiPostFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.LpRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LpRootItemProvider lpRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.LpRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLpRootAdapter() {
		if (lpRootItemProvider == null) {
			lpRootItemProvider = new LpRootItemProvider(this);
		}

		return lpRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.LpJob} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LpJobItemProvider lpJobItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.LpJob}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLpJobAdapter() {
		if (lpJobItemProvider == null) {
			lpJobItemProvider = new LpJobItemProvider(this);
		}

		return lpJobItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.LpPrecedence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LpPrecedenceItemProvider lpPrecedenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.LpPrecedence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLpPrecedenceAdapter() {
		if (lpPrecedenceItemProvider == null) {
			lpPrecedenceItemProvider = new LpPrecedenceItemProvider(this);
		}

		return lpPrecedenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.LpEmployee} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LpEmployeeItemProvider lpEmployeeItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.LpEmployee}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLpEmployeeAdapter() {
		if (lpEmployeeItemProvider == null) {
			lpEmployeeItemProvider = new LpEmployeeItemProvider(this);
		}

		return lpEmployeeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.JobsImporterSpreadsheet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JobsImporterSpreadsheetItemProvider jobsImporterSpreadsheetItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.JobsImporterSpreadsheet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJobsImporterSpreadsheetAdapter() {
		if (jobsImporterSpreadsheetItemProvider == null) {
			jobsImporterSpreadsheetItemProvider = new JobsImporterSpreadsheetItemProvider(this);
		}

		return jobsImporterSpreadsheetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptiPostSolutionItemProvider optiPostSolutionItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptiPostSolutionAdapter() {
		if (optiPostSolutionItemProvider == null) {
			optiPostSolutionItemProvider = new OptiPostSolutionItemProvider(this);
		}

		return optiPostSolutionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolutionPost} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptiPostSolutionPostItemProvider optiPostSolutionPostItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolutionPost}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptiPostSolutionPostAdapter() {
		if (optiPostSolutionPostItemProvider == null) {
			optiPostSolutionPostItemProvider = new OptiPostSolutionPostItemProvider(this);
		}

		return optiPostSolutionPostItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolutionEmployee} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptiPostSolutionEmployeeItemProvider optiPostSolutionEmployeeItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolutionEmployee}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptiPostSolutionEmployeeAdapter() {
		if (optiPostSolutionEmployeeItemProvider == null) {
			optiPostSolutionEmployeeItemProvider = new OptiPostSolutionEmployeeItemProvider(this);
		}

		return optiPostSolutionEmployeeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolutionShift} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptiPostSolutionShiftItemProvider optiPostSolutionShiftItemProvider;

	/**
	 * This creates an adapter for a {@link com.misc.projects.g4s.G4SOptiPost.OptiPostSolutionShift}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptiPostSolutionShiftAdapter() {
		if (optiPostSolutionShiftItemProvider == null) {
			optiPostSolutionShiftItemProvider = new OptiPostSolutionShiftItemProvider(this);
		}

		return optiPostSolutionShiftItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * Associates an adapter with a notifier via the base implementation, then records it to ensure it will be disposed.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected void associate(Adapter adapter, Notifier target) {
		super.associate(adapter, target);
		if (adapter != null) {
			disposable.add(adapter);
		}
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		disposable.dispose();
	}

}
